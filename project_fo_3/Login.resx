<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>